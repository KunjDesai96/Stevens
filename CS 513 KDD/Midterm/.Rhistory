library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
# Remove the missing values.
dataFile<-na.omit(dataFile)
# Discretize the “MonthAtHospital” into “less than 6 months” and “6 or more months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital < 6 ] <- 0 # Assigning 0 for “less than 6 months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital >= 6 ] <- 1 # Assigning 1 for “6 or more months”
dataFile$MonthAtHospital <- factor(dataFile$MonthAtHospital, levels = c(0,1),labels = c("Less than 6 months", "6 or more months"))
# Discretize the age into “less than 35”, “35 to 50” and “51 or over”
dataFile$Age[ dataFile$Age < 35 ] <- -1
dataFile$Age[ 35 <= dataFile$Age & dataFile$Age <= 50 ] <- 0
dataFile$Age[ 51 <= dataFile$Age ] <- 1
dataFile$Age <- factor(dataFile$Age, levels = c(-1,0,1),labels = c("Less than 35", "35 to 50", "51 and over"))
# CART model to classify infection (“infected’) based on the other variables
index<-sort(sample(nrow(dataFile),round(.25*nrow(dataFile))))
training<-dataFile[-index,]
test<-dataFile[index,]
# Grow the tree
CART_class<-rpart( Infected~., data = training)
rpart.plot(CART_class)
# Predicting the outputs
CART_predict<-predict(CART_class,test)
table(Actual = test[,7],CART_predict)
# The accuracy of the model.
CART_wrong<-sum(CART_predict!= dataFile$Infected)
CART_error_rate<-CART_wrong/length(CART_predict)
CART_accurate<-(1-CART_error_rate)*100
CART_accurate
# much fancier graph
fancyRpartPlot(CART_class)
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q6
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
#install.packages("rpart")  # CART standard package
#install.packages("rpart.plot")     # Enhanced tree plots
#install.packages("rattle")         # Fancy tree plot
#install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
# Remove the missing values.
dataFile<-na.omit(dataFile)
# Discretize the “MonthAtHospital” into “less than 6 months” and “6 or more months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital < 6 ] <- 0 # Assigning 0 for “less than 6 months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital >= 6 ] <- 1 # Assigning 1 for “6 or more months”
dataFile$MonthAtHospital <- factor(dataFile$MonthAtHospital, levels = c(0,1),labels = c("Less than 6 months", "6 or more months"))
# Discretize the age into “less than 35”, “35 to 50” and “51 or over”
dataFile$Age[ dataFile$Age < 35 ] <- -1
dataFile$Age[ 35 <= dataFile$Age & dataFile$Age <= 50 ] <- 0
dataFile$Age[ 51 <= dataFile$Age ] <- 1
dataFile$Age <- factor(dataFile$Age, levels = c(-1,0,1),labels = c("Less than 35", "35 to 50", "51 and over"))
# CART model to classify infection (“infected’) based on the other variables
index<-sort(sample(nrow(dataFile),round(.25*nrow(dataFile))))
training<-dataFile[-index,]
test<-dataFile[index,]
# Grow the tree
CART_class<-rpart( Infected~., data = training)
rpart.plot(CART_class)
# Predicting the outputs
CART_predict<-predict(CART_class,test)
table(Actual=test[,7],CART_predict)
# The accuracy of the model.
CART_wrong<-sum(CART_predict!= dataFile$Infected)
CART_error_rate<-CART_wrong/length(CART_predict)
CART_accurate<-(1-CART_error_rate)*100
CART_accurate
# much fancier graph
fancyRpartPlot(CART_class)
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q6
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
#install.packages("rpart")  # CART standard package
#install.packages("rpart.plot")     # Enhanced tree plots
#install.packages("rattle")         # Fancy tree plot
#install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
# Remove the missing values.
dataFile<-na.omit(dataFile)
# Discretize the “MonthAtHospital” into “less than 6 months” and “6 or more months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital < 6 ] <- 0 # Assigning 0 for “less than 6 months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital >= 6 ] <- 1 # Assigning 1 for “6 or more months”
dataFile$MonthAtHospital <- factor(dataFile$MonthAtHospital, levels = c(0,1),labels = c("Less than 6 months", "6 or more months"))
# Discretize the age into “less than 35”, “35 to 50” and “51 or over”
dataFile$Age[ dataFile$Age < 35 ] <- -1
dataFile$Age[ 35 <= dataFile$Age & dataFile$Age <= 50 ] <- 0
dataFile$Age[ 51 <= dataFile$Age ] <- 1
dataFile$Age <- factor(dataFile$Age, levels = c(-1,0,1),labels = c("Less than 35", "35 to 50", "51 and over"))
# CART model to classify infection (“infected’) based on the other variables
index<-sort(sample(nrow(dataFile),round(.25*nrow(dataFile))))
training<-dataFile[-index,]
test<-dataFile[index,]
# Grow the tree
CART_class<-rpart( Infected~., data = training, , type="class")
rpart.plot(CART_class)
# Predicting the outputs
CART_predict<-predict(CART_class,test)
table(Actual=test[,7],CART_predict)
# The accuracy of the model.
CART_wrong<-sum(CART_predict!= dataFile$Infected)
CART_error_rate<-CART_wrong/length(CART_predict)
CART_accurate<-(1-CART_error_rate)*100
CART_accurate
# much fancier graph
fancyRpartPlot(CART_class)
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q6
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
#install.packages("rpart")  # CART standard package
#install.packages("rpart.plot")     # Enhanced tree plots
#install.packages("rattle")         # Fancy tree plot
#install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
# Remove the missing values.
dataFile<-na.omit(dataFile)
# Discretize the “MonthAtHospital” into “less than 6 months” and “6 or more months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital < 6 ] <- 0 # Assigning 0 for “less than 6 months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital >= 6 ] <- 1 # Assigning 1 for “6 or more months”
dataFile$MonthAtHospital <- factor(dataFile$MonthAtHospital, levels = c(0,1),labels = c("Less than 6 months", "6 or more months"))
# Discretize the age into “less than 35”, “35 to 50” and “51 or over”
dataFile$Age[ dataFile$Age < 35 ] <- -1
dataFile$Age[ 35 <= dataFile$Age & dataFile$Age <= 50 ] <- 0
dataFile$Age[ 51 <= dataFile$Age ] <- 1
dataFile$Age <- factor(dataFile$Age, levels = c(-1,0,1),labels = c("Less than 35", "35 to 50", "51 and over"))
# CART model to classify infection (“infected’) based on the other variables
index<-sort(sample(nrow(dataFile),round(.25*nrow(dataFile))))
training<-dataFile[-index,]
test<-dataFile[index,]
# Grow the tree
CART_class<-rpart( Infected~., data = training)
rpart.plot(CART_class)
# Predicting the outputs
CART_predict<-predict(CART_class,test, type="class")
table(Actual=test[,7],CART_predict)
# The accuracy of the model.
CART_wrong<-sum(CART_predict!= dataFile$Infected)
CART_error_rate<-CART_wrong/length(CART_predict)
CART_accurate<-(1-CART_error_rate)*100
CART_accurate
# much fancier graph
fancyRpartPlot(CART_class)
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q6
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
#install.packages("rpart")  # CART standard package
#install.packages("rpart.plot")     # Enhanced tree plots
#install.packages("rattle")         # Fancy tree plot
#install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
# Remove the missing values.
dataFile<-na.omit(dataFile)
# Discretize the “MonthAtHospital” into “less than 6 months” and “6 or more months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital < 6 ] <- 0 # Assigning 0 for “less than 6 months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital >= 6 ] <- 1 # Assigning 1 for “6 or more months”
dataFile$MonthAtHospital <- factor(dataFile$MonthAtHospital, levels = c(0,1),labels = c("Less than 6 months", "6 or more months"))
# Discretize the age into “less than 35”, “35 to 50” and “51 or over”
dataFile$Age[ dataFile$Age < 35 ] <- -1
dataFile$Age[ 35 <= dataFile$Age & dataFile$Age <= 50 ] <- 0
dataFile$Age[ 51 <= dataFile$Age ] <- 1
dataFile$Age <- factor(dataFile$Age, levels = c(-1,0,1),labels = c("Less than 35", "35 to 50", "51 and over"))
# CART model to classify infection (“infected’) based on the other variables
index <- sort(sample(nrow(COVID19_No_Missing), as.integer(.70*nrow(COVID19_No_Missing))))
training <- dataFile[index,]
test <- dataFile[-index,]
dataFile$Infected <- as.factor(dataFile$Infected)
# Grow the tree
CART_class<-rpart( Infected~.,training[,-1])
rpart.plot(CART_class, roundint = FALSE)
# Predicting the outputs
CART_predict<-predict(CART_class,test[,-1], type="class")
table(test[,7],CART_predict)
# The accuracy of the model.
CART_wrong<-sum(test[,7]!= CART_predict)
CART_error_rate<-CART_wrong/length(test[,7])
CART_accurate<-(1-CART_error_rate)*100
CART_accurate
# much fancier graph
fancyRpartPlot(CART_class)
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q6
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
#install.packages("rpart")  # CART standard package
#install.packages("rpart.plot")     # Enhanced tree plots
#install.packages("rattle")         # Fancy tree plot
#install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
# Remove the missing values.
dataFile<-na.omit(dataFile)
# Discretize the “MonthAtHospital” into “less than 6 months” and “6 or more months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital < 6 ] <- 0 # Assigning 0 for “less than 6 months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital >= 6 ] <- 1 # Assigning 1 for “6 or more months”
dataFile$MonthAtHospital <- factor(dataFile$MonthAtHospital, levels = c(0,1),labels = c("Less than 6 months", "6 or more months"))
# Discretize the age into “less than 35”, “35 to 50” and “51 or over”
dataFile$Age[ dataFile$Age < 35 ] <- -1
dataFile$Age[ 35 <= dataFile$Age & dataFile$Age <= 50 ] <- 0
dataFile$Age[ 51 <= dataFile$Age ] <- 1
dataFile$Age <- factor(dataFile$Age, levels = c(-1,0,1),labels = c("Less than 35", "35 to 50", "51 and over"))
# CART model to classify infection (“infected’) based on the other variables
index <- sort(sample(nrow(COVID19_No_Missing), as.integer(.70*nrow(COVID19_No_Missing))))
training <- dataFile[index,]
test <- dataFile[-index,]
dataFile$Infected <- as.factor(dataFile$Infected)
# Grow the tree
CART_class<-rpart( Infected~.,training[,-1])
rpart.plot(CART_class, roundint = FALSE)
# Predicting the outputs
CART_predict<-predict(CART_class,test[,-1], type="class")
table(test[,7],CART_predict)
# The accuracy of the model.
CART_wrong<-sum(test[,7]!= CART_predict)
CART_error_rate<-CART_wrong/length(test[,7])
CART_accurate<-(1-CART_error_rate)*100
CART_accurate
# much fancier graph
fancyRpartPlot(CART_class)
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q6
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
#install.packages("rpart")  # CART standard package
#install.packages("rpart.plot")     # Enhanced tree plots
#install.packages("rattle")         # Fancy tree plot
#install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
# Remove the missing values.
dataFile<-na.omit(dataFile)
# Discretize the “MonthAtHospital” into “less than 6 months” and “6 or more months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital < 6 ] <- 0 # Assigning 0 for “less than 6 months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital >= 6 ] <- 1 # Assigning 1 for “6 or more months”
dataFile$MonthAtHospital <- factor(dataFile$MonthAtHospital, levels = c(0,1),labels = c("Less than 6 months", "6 or more months"))
# Discretize the age into “less than 35”, “35 to 50” and “51 or over”
dataFile$Age[ dataFile$Age < 35 ] <- -1
dataFile$Age[ 35 <= dataFile$Age & dataFile$Age <= 50 ] <- 0
dataFile$Age[ 51 <= dataFile$Age ] <- 1
dataFile$Age <- factor(dataFile$Age, levels = c(-1,0,1),labels = c("Less than 35", "35 to 50", "51 and over"))
# CART model to classify infection (“infected’) based on the other variables
index <- sort(sample(nrow(dataFile), as.integer(.70*nrow(dataFile))))
training <- dataFile[index,]
test <- dataFile[-index,]
dataFile$Infected <- as.factor(dataFile$Infected)
# Grow the tree
CART_class<-rpart( Infected~.,training[,-1])
rpart.plot(CART_class, roundint = FALSE)
# Predicting the outputs
CART_predict<-predict(CART_class,test[,-1], type="class")
table(test[,7],CART_predict)
# The accuracy of the model.
CART_wrong<-sum(test[,7]!= CART_predict)
CART_error_rate<-CART_wrong/length(test[,7])
CART_accurate<-(1-CART_error_rate)*100
CART_accurate
# much fancier graph
fancyRpartPlot(CART_class)
## remove all objects
rm(list=ls())
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q7
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
#install.packages("kknn")
#Use the R library("kknn")
library(kknn)
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
View(dataFile)
# Remove the missing values.
dataFile<-dataFile[complete.cases(dataFile),]
##########################################################
trainRows <- sort(sample(nrow(dataFile), size = floor(.70*nrow(dataFile))))
train <- dataFile[trainRows,]
test <- dataFile[-trainRows,]
## K=5
dataFile$Infected <- as.factor(dataFile$Infected)
predict_k5 <- kknn(formula=Infected~., train, test[,-7], k=5,kernel ="rectangular" )
fit <- fitted(predict_k5)
table(test$Infected,Fitted=fit)
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q6
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
#install.packages("rpart")  # CART standard package
#install.packages("rpart.plot")     # Enhanced tree plots
#install.packages("rattle")         # Fancy tree plot
#install.packages("RColorBrewer")   # colors needed for rattle
library(rpart)
library(rpart.plot)  			# Enhanced tree plots
library(rattle)           # Fancy tree plot
library(RColorBrewer)     # colors needed for rattle
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
# Remove the missing values.
dataFile<-na.omit(dataFile)
# Discretize the “MonthAtHospital” into “less than 6 months” and “6 or more months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital < 6 ] <- 0 # Assigning 0 for “less than 6 months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital >= 6 ] <- 1 # Assigning 1 for “6 or more months”
dataFile$MonthAtHospital <- factor(dataFile$MonthAtHospital, levels = c(0,1),labels = c("Less than 6 months", "6 or more months"))
# Discretize the age into “less than 35”, “35 to 50” and “51 or over”
dataFile$Age[ dataFile$Age < 35 ] <- -1
dataFile$Age[ 35 <= dataFile$Age & dataFile$Age <= 50 ] <- 0
dataFile$Age[ 51 <= dataFile$Age ] <- 1
dataFile$Age <- factor(dataFile$Age, levels = c(-1,0,1),labels = c("Less than 35", "35 to 50", "51 and over"))
# CART model to classify infection (“infected’) based on the other variables
index <- sort(sample(nrow(dataFile), as.integer(.70*nrow(dataFile))))
training <- dataFile[index,]
test <- dataFile[-index,]
dataFile$Infected <- as.factor(dataFile$Infected)
# Grow the tree
CART_class<-rpart( Infected~.,training[,-1])
rpart.plot(CART_class, roundint = FALSE)
# Predicting the outputs
CART_predict<-predict(CART_class,test[,-1], type="class")
table(test[,7],CART_predict)
# The accuracy of the model.
CART_wrong<-sum(test[,7]!= CART_predict)
CART_error_rate<-CART_wrong/length(test[,7])
CART_accurate<-(1-CART_error_rate)*100
CART_accurate
# much fancier graph
fancyRpartPlot(CART_class)
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q5
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
#install.packages('e1071', dependencies = TRUE)
library(e1071)
library(class)
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
# Remove the missing values.
dataFile<- na.omit(dataFile)
# Discretize the “MonthAtHospital” into “less than 6 months” and “6 or more months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital < 6 ] <- 0 # Assigning 0 for “less than 6 months”
dataFile$MonthAtHospital[ dataFile$MonthAtHospital >= 6 ] <- 1 # Assigning 1 for “6 or more months”
dataFile$MonthAtHospital <- factor(dataFile$MonthAtHospital, levels = c(0,1),labels = c("Less than 6 months", "6 or more months"))
# Discretize the age into “less than 35”, “35 to 50” and “51 or over”
dataFile$Age[ dataFile$Age < 35 ] <- -1
dataFile$Age[ 35 <= dataFile$Age & dataFile$Age <= 50 ] <- 0
dataFile$Age[ 51 <= dataFile$Age ] <- 1
dataFile$Age <- factor(dataFile$Age, levels = c(-1,0,1),labels = c("Less than 35", "35 to 50", "51 and over"))
# Naïve Bayes model to classify infection (“infected’) based on the other variables
nBayes_all <- naiveBayes(Infected ~., data = dataFile)
# Predicting the outputs
model_predict <- predict(nBayes_all,dataFile)
# The accuracy of the model.
NB_wrong<-sum(model_predict!= dataFile$Infected)
NB_error_rate<-NB_wrong/length(model_predict)
NB_accurate<-(1-NB_error_rate)*100
NB_accurate
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q2
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
View(dataFile)
#I.	Summarizing each column (e.g. min, max, mean )
summary(dataFile)
#II.	Identifying missing values
missing_values_check <- is.na(dataFile)
missing_values <- dataFile[!complete.cases(dataFile),]
#III.	Displaying the frequency table of “Infected” vs. “MaritalStatus”
frequency_table <- table(dataFile$Infected,dataFile$MaritalStatus)
print(frequency_table)
#IV.	Displaying the scatter plot of “Age”, “MaritalStatus” and “MonthAtHospital”, one pair at a time
dev.off()
pairs(dataFile[, c("Age", "MaritalStatus", "MonthAtHospital")])
title("Scatter Plot")
#V.	Show box plots for columns:  “Age”, “MaritalStatus” and “MonthAtHospital”
boxplot(dataFile[, c("Age", "MaritalStatus", "MonthAtHospital")])
title("Box Plot")
#VI.	Replacing the missing values of “Cases” with the “mean” of “Cases”.
dataFile[is.na(dataFile[,c("Cases")])] <- mean(dataFile[,c("Cases")], na.rm = TRUE)
#I.	Summarizing each column (e.g. min, max, mean )
summary(dataFile)
################################################################################
# Company   : Stevens
# Course    : Data Mining
# Purpose   : Solution for Q2
# First Name: Kunj
# Last Name : Desai
# ID        : 1044511
################################################################################
## remove all objects
rm(list=ls())
# reading data
csvfile<-file.choose()
dataFile<-read.csv(csvfile)
#I.	Summarizing each column (e.g. min, max, mean )
summary(dataFile)
#II.	Identifying missing values
missing_values_check <- is.na(dataFile)
missing_values <- dataFile[!complete.cases(dataFile),]
#III.	Displaying the frequency table of “Infected” vs. “MaritalStatus”
frequency_table <- table(dataFile$Infected,dataFile$MaritalStatus)
print(frequency_table)
#IV.	Displaying the scatter plot of “Age”, “MaritalStatus” and “MonthAtHospital”, one pair at a time
dev.off()
pairs(dataFile[, c("Age", "MaritalStatus", "MonthAtHospital")])
title("Scatter Plot")
#V.	Show box plots for columns:  “Age”, “MaritalStatus” and “MonthAtHospital”
boxplot(dataFile[, c("Age", "MaritalStatus", "MonthAtHospital")])
title("Box Plot")
#VI.	Replacing the missing values of “Cases” with the “mean” of “Cases”.
dataFile[is.na(dataFile[,c("Cases")])] <- mean(dataFile[,c("Cases")], na.rm = TRUE)
pairs(dataFile[, c("Age", "MaritalStatus", "MonthAtHospital")])
